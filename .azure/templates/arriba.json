{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "additionalSecrets": {
      "type": "secureObject",
      "metadata": {
        "description": "Additional secrets to inject into the keyVault"
      },
      "defaultValue": {
        "items": [
          {
            "name": "example-secret-name",
            "secret": "example-secret-value"
          }
        ]
      }
    }
  },
  "variables": {
    "appServicePlanName": "[parameters('name')]",
    "appServicePlanSku": {
      "name": "S3",
      "tier": "Standard",
      "size": "S3",
      "family": "S",
      "capacity": 1
    },
    "webAppName": "[parameters('name')]",
    "storageAccountName": "[toLower(take(replace(replace(parameters('name'), '-', ''), '_', ''), 24))]",
    "storageAccountSku": "Standard_LRS",
    "storageAccountApiVersion": "2018-07-01",
    "appInsightsName": "[parameters('name')]",
    "keyVaultName": "[toLower(take(replace(replace(parameters('name'), '-', ''), '_', ''), 24))]",
    "keyVaultSku": {
      "family": "A",
      "name": "Standard"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": "[variables('appServicePlanSku')]",
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "app",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "DOTNETCORE|3.1"
        },
        "httpsOnly": true
      },
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2018-11-01",
          "properties": {
            "KeyVaultNameFromDeployment": "[variables('keyVaultName')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName'))]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('storageAccountApiVersion')]",
      "kind": "StorageV2",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountSku')]"
      }
    },
    {
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "apiVersion": "2014-04-01",
      "properties": {
      }
    },
    {
      "name": "[variables('keyVaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "accessPolicies": [
          {
            "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('webAppName')), '2018-02-01', 'Full').identity.tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/', variables('webAppName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [
                "Get",
                "List"
              ]
            }
          }
        ],
        "sku": "[variables('keyVaultSku')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ]
    },
    {
      "name": "[concat(variables('keyVaultName'), '/ApplicationInsights--InstrumentationKey')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "location": "[parameters('location')]",
      "properties": {
        "value": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "attributes": {
          "enabled": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ]
    },
    {
      "name": "[concat(variables('keyVaultName'), '/AzureStorageSettings--ConnectionString')]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "location": "[parameters('location')]",
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('storageAccountApiVersion')).keys[0].value)]",
        "attributes": {
          "enabled": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', parameters('additionalSecrets').items[copyIndex()].name)]",
      "apiVersion": "2016-10-01",
      "copy": {
        "name": "secretsCopy",
        "count": "[length(parameters('additionalSecrets').items)]"
      },
      "properties": {
        "value": "[parameters('additionalSecrets').items[copyIndex()].secret]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ]
    }
  ],
  "outputs": {
    "result": {
      "type": "object",
      "value": {
        "WebAppName": "[variables('webAppName')]"
      }
    }
  }
}